generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  password    String?   // Password is nullable for OAuth users
  googleId    String?   @unique
  name        String?
  username    String    @unique
  avatarUrl   String?
  bio         String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  events      Event[]   @relation("CreatorEvents")
  rsvps       RSVP[]
  messages    Message[]
}

model Event {
  id          String     @id @default(cuid())
  title       String
  description String
  imageUrl    String?
  dateTime    DateTime
  location    String
  lat         Float?
  lng         Float?
  capacity    Int?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  creator     User       @relation("CreatorEvents", fields: [creatorId], references: [id])
  creatorId   String

  categories  Category[]

  rsvps       RSVP[]
  messages    Message[]
}

model RSVP { // RSVP stands for "Répondez s'il vous plaît" (French for "Please respond")
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String

  event     Event    @relation(fields: [eventId], references: [id])
  eventId   String

  createdAt DateTime @default(now())

  @@unique([userId, eventId]) // prevent double booking
}

model Category {
  id      String   @id @default(cuid())
  name    String   @unique
  emoji   String? 

  events  Event[]
}

model Message {
  id        String   @id @default(cuid())
  content   String
  createdAt    DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  userId    String

  event     Event    @relation(fields: [eventId], references: [id])
  eventId   String
}