generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String? // Password is nullable for OAuth users
  googleId  String?  @unique
  name      String?
  username  String   @unique
  avatarUrl String?
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @default(USER)

  events   Event[]   @relation("CreatorEvents")
  rsvps    RSVP[]
  messages Message[]
}

enum EventStatus {
  ACTIVE
  CANCELED
}

model Event {
  id          String   @id @default(cuid())
  title       String
  description String
  imageUrl    String?
  dateTime    DateTime
  location    String
  lat         Float?
  lng         Float?
  capacity    Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  creator   User   @relation("CreatorEvents", fields: [creatorId], references: [id])
  creatorId String

  categories Category[]

  rsvps    RSVP[]
  messages Message[]

  status EventStatus @default(ACTIVE)

  @@index([lat, lng])
}

model RSVP {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  event   Event  @relation(fields: [eventId], references: [id])
  eventId String

  createdAt DateTime @default(now())

  @@unique([userId, eventId])
}

model Category {
  id    String  @id @default(cuid())
  name  String  @unique
  emoji String?

  events Event[]
}

model Message {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  event   Event  @relation(fields: [eventId], references: [id])
  eventId String
}
